apiVersion: v1
kind: ConfigMap
metadata:
  name: appwrite
data:
  _APP_ENV: production
  _APP_LOCALE: en
  _APP_CONSOLE_WHITELIST_ROOT: enabled
  #_APP_CONSOLE_WHITELIST_EMAILS: 
  #_APP_CONSOLE_WHITELIST_IPS:
  #_APP_SYSTEM_EMAIL_NAME: Appwrite
  #_APP_SYSTEM_EMAIL_ADDRESS: "team@appwrite.io"
  _APP_SYSTEM_SECURITY_EMAIL_ADDRESS: "security@appwrite.io"
  #APP_SYSTEM_RESPONSE_FORMAT:
  #_APP_OPTIONS_ABUSE: disabled
  #_APP_OPTIONS_FORCE_HTTPS: disabled
  #_APP_DOMAIN: demo.appwrite.io
  #_APP_DOMAIN_TARGET: demo.appwrite.io
  _APP_USAGE_STATS: enabled
  #_APP_STORAGE_LIMIT: 10000000
  #_APP_STORAGE_ANTIVIRUS: disabled
  #_APP_STORAGE_ANTIVIRUS_HOST: clamav
  #_APP_STORAGE_ANTIVIRUS_PORT: 3310
  _APP_FUNCTIONS_TIMEOUT: "900"
  _APP_FUNCTIONS_CONTAINERS: "10"
  _APP_FUNCTIONS_CPUS: "1"
  _APP_FUNCTIONS_MEMORY: "256"
  _APP_FUNCTIONS_MEMORY_SWAP: "256"
  #_APP_FUNCTIONS_RUNTIMES:

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: appwrite
spec:
  replicas: 1
  selector:
    matchLabels:
      app: appwrite
  template:
    metadata:
      annotations:
        traefik.constraint-label-stack: appwrite
        traefik.docker.network: appwrite
        traefik.enable: "true"
        traefik.http.routers.appwrite_api_http.entrypoints: appwrite_web
        traefik.http.routers.appwrite_api_http.rule: PathPrefix(`/`)
        traefik.http.routers.appwrite_api_http.service: appwrite_api
        traefik.http.routers.appwrite_api_https.entrypoints: appwrite_websecure
        traefik.http.routers.appwrite_api_https.rule: PathPrefix(`/`)
        traefik.http.routers.appwrite_api_https.service: appwrite_api
        traefik.http.routers.appwrite_api_https.tls: "true"
        traefik.http.services.appwrite_api.loadbalancer.server.port: "80"
      labels:
        app: appwrite
    spec:
      containers:
        - image: appwrite/appwrite:0.11
          name: appwrite          
          volumeMounts:
            - mountPath: /storage/uploads
              name: appwrite-uploads
            - mountPath: /storage/cache
              name: appwrite-cache
            - mountPath: /storage/config
              name: appwrite-config
            - mountPath: /storage/certificates
              name: appwrite-certificates
            - mountPath: /storage/functions
              name: appwrite-functions
          envFrom:
          - secretRef:
              name: appwrite-influxdb
          - secretRef:
              name: appwrite-mariadb
          - secretRef:
              name: appwrite-redis
      volumes:
        - name: appwrite-uploads
          persistentVolumeClaim:
            claimName: appwrite-uploads
        - name: appwrite-cache
          persistentVolumeClaim:
            claimName: appwrite-cache
        - name: appwrite-config
          persistentVolumeClaim:
            claimName: appwrite-config
        - name: appwrite-certificates
          persistentVolumeClaim:
            claimName: appwrite-certificates
        - name: appwrite-functions
          persistentVolumeClaim:
            claimName: appwrite-functions

---

apiVersion: v1
kind: Secret
metadata:
 name: appwrite
stringData:
  _APP_OPENSSL_KEY_V1: "37558ib ijhgyufr56ewriuyo"
  #_APP_SMTP_HOST: maildev
  #_APP_SMTP_PORT: "1025"
  #_APP_SMTP_SECURE:
  #_APP_SMTP_USERNAME:
  #_APP_SMTP_PASSWORD:

---

apiVersion: v1
kind: Service
metadata:
  name: appwrite
spec:
  selector:
    app: appwrite
  ports:
  - port: 80
